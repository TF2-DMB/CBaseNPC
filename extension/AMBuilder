# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'cbasenpc'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
  'cbasenpc_behavior.cpp',
  'cbasenpc_internal.cpp',
  'npc_tools_internal.cpp',
  'idatamapcontainer.cpp',
  'pluginentityfactory.cpp',
  'CDetour/detours.cpp',
  'asm/asm.c',
  'helpers.cpp',
  'sourcesdk/NextBot/Path/NextBotPath.cpp',
  'sourcesdk/NextBot/Path/NextBotPathFollow.cpp',
  'sourcesdk/NextBot/Path/NextBotChasePath.cpp',
  'sourcesdk/NextBot/NextBotBodyInterface.cpp',
  'sourcesdk/NextBot/NextBotGroundLocomotion.cpp',
  'sourcesdk/NextBot/NextBotCombatCharacter.cpp',
  'sourcesdk/NextBot/NextBotComponentInterface.cpp',
  'sourcesdk/NextBot/NextBotInterface.cpp',
  'sourcesdk/NextBot/NextBotIntentionInterface.cpp',
  'sourcesdk/nav_area.cpp',
  'sourcesdk/nav_mesh.cpp',
  'sourcesdk/nav_threaded.cpp',
  'sourcesdk/entityfactorydictionary.cpp',
  'sourcesdk/customfactory.cpp',
  'sourcesdk/baseentity.cpp',
  'sourcesdk/baseentityoutput.cpp',
  'sourcesdk/baseanimating.cpp',
  'sourcesdk/baseanimatingoverlay.cpp',
  'sourcesdk/basecombatcharacter.cpp',
  'sourcesdk/servernetworkproperty.cpp',
  'sourcesdk/collisionproperty.cpp',
  'sourcesdk/tf_gamerules.cpp',
  'sourcesdk/tracefilter_simple.cpp'
]

###############
# Make sure to edit PackageScript, which copies your files to their appropriate locations
# Simple extensions do not need to modify past this point.

project = Extension.HL2Project(builder, projectName + '.ext')
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, 'sourcesdk')]
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, 'sourcesdk/NextBot')]
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, 'sourcesdk/NextBot/Path')]
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, 'natives')]
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, 'shared')]
project.compiler.cxxincludes += [os.path.join(builder.currentSourcePath, '')]
project.compiler.cxxincludes += [os.path.join(Extension.sm_root, 'sourcepawn/third_party/amtl/amtl')]
project.compiler.cxxincludes += [os.path.join(Extension.sm_root, 'sourcepawn/third_party/amtl')]
project.compiler.cxxincludes += [os.path.join(Extension.sm_root)]

project.compiler.cxxincludes += [os.path.join(Extension.mms_root, 'core', 'sourcehook')]

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles

print(project.compiler.cxxflags)

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  
  project.compiler.cxxincludes += [os.path.join(sdk.path, 'game/server')]
  project.compiler.cxxincludes += [os.path.join(sdk.path, 'game/shared')]
  
  binary = Extension.HL2Config(project, projectName + '.ext.' + sdk.ext, sdk)

Extension.extensions = builder.Add(project)
