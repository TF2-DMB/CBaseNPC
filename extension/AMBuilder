# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

project = builder.LibraryProject('cbasenpc.ext')
project.sources = [
  'extension.cpp',
  'cbasenpc_behavior.cpp',
  'cbasenpc_internal.cpp',
  'cbasenpc_locomotion.cpp',
  'npc_tools_internal.cpp',
  'idatamapcontainer.cpp',
  'pluginentityfactory.cpp',
  'toolsnav_mesh.cpp',
  'toolsnextbot.cpp',
  'CDetour/detours.cpp',
  'asm/asm.c',
  'helpers.cpp',
  'sourcesdk/NextBot/Path/NextBotPath.cpp',
  'sourcesdk/NextBot/Path/NextBotPathFollow.cpp',
  'sourcesdk/NextBot/Path/NextBotChasePath.cpp',
  'sourcesdk/NextBot/NextBotBodyInterface.cpp',
  'sourcesdk/NextBot/NextBotGroundLocomotion.cpp',
  'sourcesdk/NextBot/NextBotCombatCharacter.cpp',
  'sourcesdk/NextBot/NextBotComponentInterface.cpp',
  'sourcesdk/NextBot/NextBotInterface.cpp',
  'sourcesdk/NextBot/NextBotIntentionInterface.cpp',
  'sourcesdk/NextBot/NextBotLocomotionInterface.cpp',
  'sourcesdk/NextBot/NextBotManager.cpp',
  'sourcesdk/nav_area.cpp',
  'sourcesdk/nav_mesh.cpp',
  'sourcesdk/entityfactorydictionary.cpp',
  'sourcesdk/customfactory.cpp',
  'sourcesdk/baseentity.cpp',
  'sourcesdk/baseentityoutput.cpp',
  'sourcesdk/baseanimating.cpp',
  'sourcesdk/baseanimatingoverlay.cpp',
  'sourcesdk/basecombatcharacter.cpp',
  'sourcesdk/servernetworkproperty.cpp',
  'sourcesdk/collisionproperty.cpp',
  'sourcesdk/tf_gamerules.cpp',
  'sourcesdk/tracefilter_simple.cpp',
  'sourcesdk/basedoor.cpp',
  'sourcesdk/basetoggle.cpp',
  'sourcesdk/funcbrush.cpp',
  'sourcesdk/takedamageinfo.cpp',
  'natives.cpp',
  'natives/cbasenpc.cpp',
  'natives/baseentity.cpp',
  'natives/baseanimating.cpp',
  'natives/baseanimatingoverlay.cpp',
  'natives/basecombatcharacter.cpp',
  'natives/takedamageinfo.cpp',
  'natives/nav.cpp',
  'natives/entityfactory.cpp',
  'natives/nav/area.cpp',
  'natives/nextbot.cpp',
  'natives/nextbot/component.cpp',
  'natives/nextbot/eventresponder.cpp',
  'natives/nextbot/vision.cpp',
  'natives/nextbot/knownentity.cpp',
  'natives/nextbot/body.cpp',
  'natives/nextbot/locomotion.cpp',
  'natives/nextbot/locomotion/ground.cpp',
  'natives/nextbot/intention.cpp',
  'natives/nextbot/behavior.cpp',
  'natives/nextbot/path.cpp',
  'natives/nextbot/path/chase.cpp',
  'natives/nextbot/path/follower.cpp',
  'natives/nextbotplayer.cpp',
  'natives/tf/nav.cpp',
  'natives/tf/nav/area.cpp',
  'smsdk_ext.cpp'
]

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]

  for cxx in builder.targets:
    if not cxx.target.arch in sdk.platformSpec[cxx.target.platform]:
      continue
  
    binary = Extension.HL2ExtConfig(project, builder, cxx, 'cbasenpc.ext.' + sdk.ext, sdk)
    binary.compiler.cxxincludes += [
      os.path.join(builder.currentSourcePath, 'sourcesdk'),
      os.path.join(builder.currentSourcePath, 'sourcesdk/NextBot'),
      os.path.join(builder.currentSourcePath, 'sourcesdk/NextBot/Path'),
      os.path.join(builder.currentSourcePath, 'natives'),
      os.path.join(builder.currentSourcePath, 'shared'),
      os.path.join(builder.currentSourcePath, ''),
      os.path.join(sdk.path, 'game', 'shared'),
      os.path.join(sdk.path, 'game', 'server')
    ]
    if binary.compiler.behavior == 'gcc' or binary.compiler.behavior == 'clang':
      binary.compiler.cxxflags += ['-Wno-invalid-offsetof']
      binary.sources += ['linux/glibc_compat.cpp']

Extension.extensions = builder.Add(project)